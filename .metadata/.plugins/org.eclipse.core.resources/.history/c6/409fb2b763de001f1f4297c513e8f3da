package practice;

import tester.Tester;

class Date {
  int day;
  int month;
  int year;

  Date(int day, int month, int year) {
    this.day = day;
    this.month = month;
    this.year = year;
  }

  /*
   * ??? lll() { ...this.day... ...this.month... ...this.year... }
   */
}

interface ILog {
  /*
   * ??? nnn();
   */

  // to compute the total number of miles recorded in this log
  double miles();
}

class MtLog implements ILog {
  MtLog() {}

  /*
   * ??? nnn() { ... }
   */
  
  public double miles() {
    return 0.0;
  }
}

class ConsLog implements ILog {
  Entry first;
  ILog rest;

  ConsLog(Entry first, ILog rest) {
    this.first = first;
    this.rest = rest;
  }

  /*
   * TEMPLATE 
   * FIELDS: 
   * ... this.first ... -- Entry 
   * ... this.rest ... -- ILog
   * METHODS FOR FIELDS: 
   * ??? nnn() { 
   * ... this.first.mmm() ... ... this.rest.nnn()
   * ... }
   */
  
  public double miles() {
    return this.first.distance + this.rest.miles();
  }
}

class Entry {
  Date d;
  double distance; // miles
  int duration; // minutes
  String comment;

  Entry(Date d, double distance, int duration, String comment) {
    this.d = d;
    this.distance = distance;
    this.duration = duration;
    this.comment = comment;
  }

  /*
   * TEMPLATE 
   * METHODS: 
   * ??? mmm() { 
   * ... this.d.lll()... ... this.distance ... 
   * ... this.duration ... ... this.comment... }
   * 
   */
}

class CompositeExamples {
  CompositeExamples() { }
  
  Date d1 = new Date(5, 5, 2003);
  Date d2 = new Date(6, 6, 2003);
  Date d3 = new Date(23, 6, 2003);
  
  Entry e1 = new Entry(d1, 5.0, 25, "Good");
  Entry e2 = new Entry(d2, 3.0, 24, "Tired");
  Entry e3 = new Entry(d3, 26.0, 156, "Great");
  
  ILog l1 = new MtLog();
  ILog l2 = new ConsLog(e1, l1);
  ILog l3 = new ConsLog(e2, l2);
  ILog l4 = new ConsLog(e3, l3);
  
  boolean testMiles(Tester t) {
    return t.checkInexact(l1.miles(), 0.0, 0.1)    // empty log
        && t.checkInexact(l2.miles(), 5.0, 0.1)
        && t.checkInexact(l3.miles(), 8.0, 0.1)
        && t.checkInexact(l4.miles(), 34.0, 0.1);
  }
}