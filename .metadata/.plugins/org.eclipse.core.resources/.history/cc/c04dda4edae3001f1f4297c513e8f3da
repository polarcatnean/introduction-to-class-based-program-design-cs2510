import tester.Tester;

// A MOT (ModeOfTransportation) is one of
// -- Bicycle
// -- Car

interface IMOT {
  // returns true if this mode of transportation is at least as efficient as the
  // given mpg
  boolean isMoreFuelEffThan(int mpg);

  boolean isMoreEffThan(IMOT mot);
}

// Represents a bicycle as a mode of transportation
class Bicycle implements IMOT {
  String brand;

  Bicycle(String brand) {
    this.brand = brand;
  }

  public boolean isMoreFuelEffThan(int mpg) { // doesn't consume fuel
    return true;
  }

  public boolean isMoreEffThan(IMOT mot) {
    return true;
  }
}

// Represents a car as a mode of transportation
class Car implements IMOT {
  String make;
  int mpg; // represents the fuel efficiency in miles per gallon

  Car(String make, int mpg) {
    this.make = make;
    this.mpg = mpg;
  }

  public boolean isMoreFuelEffThan(int mpg) {
    return this.mpg >= mpg;
  }

  public boolean isMoreEffThan(IMOT mot) {
    return mot.isMoreFuelEffThan(this.mpg);
  }
}

// Keeps track of how a person is transported
class Person {
  String name;
  IMOT mot;

  Person(String name, IMOT mot) {
    this.name = name;
    this.mot = mot;
  }

  // does this person's mode of transportation meet the given fuel efficiency
  // target* (in mpg)
  boolean meetFuelEff(int mpg) {
    return this.mot.isMoreFuelEffThan(mpg);
  }

  boolean motIsMoreFuelEfficientThan(IMOT mot) {
    return this.mot.isMoreEffThan(mot);
  }
}

class ExamplesPerson {

  IMOT diamondback = new Bicycle("Diamondback");
  IMOT toyota = new Car("Toyota", 30);
  IMOT lamborghini = new Car("Lamborghini", 17);

  Person bob = new Person("Bob", diamondback);
  Person ben = new Person("Ben", toyota);
  Person becca = new Person("Becca", lamborghini);

  boolean testMeetFuelEff(Tester t) {
    return t.checkExpect(bob.meetFuelEff(25), true) 
        && t.checkExpect(ben.meetFuelEff(25), true)
        && t.checkExpect(becca.meetFuelEff(25), false);
  }

  boolean testMotMoreEfficientThan(Tester t) {
    return t.checkExpect(bob.motIsMoreFuelEfficientThan(toyota), true)
        && t.checkExpect(ben.motIsMoreFuelEfficientThan(toyota), false)
        && t.checkExpect(becca.motIsMoreFuelEfficientThan(diamondback), false);
  }
}
