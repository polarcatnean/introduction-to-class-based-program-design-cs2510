
// ALIASING concept

class Person {
  String name;
  int phone;
  Person(String name, int phone) {
    this.name = name;
    this.phone = phone;
  }
  // Returns true when the given person has the same name and phone number as this person
  boolean samePerson(Person that) {
    return this.name.equals(that.name) && this.phone == that.phone;
  }
  
  public boolean sameName(String name) {
    return this.name.equals(name);
  }
}

interface ILoPerson {
  boolean contains(String name);
  int findPhoneNum(String name);
  void changePhone(String name, int newNum);
}

class MtLoPerson implements ILoPerson {

  public boolean contains(String name) {
    return false;
  }

  public int findPhoneNum(String name) {
    return -1;
  }

  public void changePhone(String name, int newNum) {
    // TODO Auto-generated method stub
    
  }
  
}

class ConsLoPerson implements ILoPerson {
  Person first;
  ILoPerson rest;
  
  ConsLoPerson(Person first, ILoPerson rest) {
    this.first = first;
    this.rest = rest;
  }

  public boolean contains(String name) {
    return this.first.sameName(name) || this.rest.contains(name);
  }

  @Override
  public int findPhoneNum(String name) {
    // TODO Auto-generated method stub
    return 0;
  }

  @Override
  public void changePhone(String name, int newNum) {
    // TODO Auto-generated method stub
    
  }
}


class ExamplePhoneLists {
  Person anne = new Person("Anne", 1234);
  Person bob = new Person("Bob", 3456);
  Person clyde = new Person("Clyde", 6789);
  Person dana = new Person("Dana", 1357);
  Person eric = new Person("Eric", 12469);
  Person frank = new Person("Frank", 7294);
  Person gail = new Person("Gail", 9345);
  Person henry = new Person("Henry", 8602);
  Person irene = new Person("Irene", 91302);
  Person jenny = new Person("Jenny", 8675309);
 
  ILoPerson friends, family, work;
  
  void initData() {
    this.friends =
      new ConsLoPerson(this.anne, new ConsLoPerson(this.clyde,
        new ConsLoPerson(this.gail, new ConsLoPerson(this.frank,
          new ConsLoPerson(this.jenny, new MtLoPerson())))));
    
    this.family =
      new ConsLoPerson(this.anne, new ConsLoPerson(this.dana,
        new ConsLoPerson(this.frank, new MtLoPerson())));
    
    this.work =
      new ConsLoPerson(this.bob, new ConsLoPerson(this.clyde,
        new ConsLoPerson(this.dana, new ConsLoPerson(this.eric,
          new ConsLoPerson(this.henry, new ConsLoPerson(this.irene,
            new MtLoPerson()))))));
  }
}