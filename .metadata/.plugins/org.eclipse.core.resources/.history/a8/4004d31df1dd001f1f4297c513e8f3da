interface IItem {
  
}

class IceCream implements IItem {
  String brand;
  String flavour;
  int weight;  // in grams
  int price;   // in cents
  
  IceCream(String brand, String flavour, int weight, int price) {
    this.brand = brand;
    this.flavour = flavour;
    this.weight = weight;
    this.price = price;
  }
}

class Coffee implements IItem {
  String brand;
  boolean decaf; // false means regular
  int weight;  // in grams
  int price;   // in cents
  
  Coffee(String brand, boolean decaf, int weight, int price) {
    this.brand = brand;
    this.decaf = decaf;
    this.weight = weight;
    this.price = price;
  }
}

class Juice implements IItem {
  String brand;
  String flavour;
  String packaged;  // frozen, fresh, bottled, canned
  int weight;  // in grams
  int price;   // in cents
  
  Juice(String brand, String flavour, String packaged, int weight, int price) {
    this.brand = brand;
    this.flavour = flavour;
    this.packaged = packaged;
    this.weight = weight;
    this.price = price;
  }
}


class ExamplesItems {
  ExamplesItems() {}
  
  IItem coolway1 = new IceCream("Cool Way", "Cookies and Cream", 500, 599);
  IItem parlour1 = new IceCream("Parlour", "Butterscotch Flavoured Sundae Frozen Dessert", 1500, 399);
  IItem haagen1 = new IceCream("Haagen-Dazs", "Salted Caramel", 450, 549);
  
  IItem coffee1 = new Coffee("Irresitible", false, 340, 699);
  IItem coffee2 = new Coffee("Tim Hortons", true, 300, 1049);
  IItem coffee3 = new Coffee("Nescafe", true, 90, 699);
  IItem coffee4 = new Coffee("Nescafe", false, 170, 599);
  
  IItem juice1 = new Juice("Irresitible", "Orange, Peach and Mango", "bottled", 165, 549);
  IItem juice2 = new Juice("Minute Maid", "Orange", "frozen", 295, 249);
  IItem juice3 = new Juice("Irresitible", "Apple", "fresh", 165, 529);
  IItem juice4 = new Juice("Dole", "Apple", "canned", 340*12, 799);
  
}